"""This module is a unit test of the dual_quad implementation.

To run
> conda activate siblenv
> cd ~/sibl
> pytest geo/tests/test_dual_quad.py -v
"""

import ptg.dual_quad as dquad


def test_L0():
    template = dquad.Template_0000()
    assert template

    assert template.name == "0000"

    assert template.vertices == (
        (-1.0, -1.0),
        (-1.0, 0.0),
        (-1.0, 1.0),
        (0.0, -1.0),
        (0.0, 0.0),
        (0.0, 1.0),
        (1.0, -1.0),
        (1.0, 0.0),
        (1.0, 1.0),
    )

    assert template.vertices_revalence is None

    assert template.faces == (
        (0, 3, 4, 1),
        (1, 4, 5, 2),
        (3, 6, 7, 4),
        (4, 7, 8, 5),
    )

    assert template.vertices_dual == (
        (-0.5, -0.5),
        (-0.5, 0.5),
        (0.5, -0.5),
        (0.5, 0.5),
    )

    assert template.faces_dual == ((0, 2, 3, 1),)

    assert template.ports == (
        (-0.5, -1.0),
        (0.5, -1.0),
        (1.0, -0.5),
        (1.0, 0.5),
        (0.5, 1.0),
        (-0.5, 1.0),
        (-1.0, 0.5),
        (-1.0, -0.5),
    )


def test_Convex():
    template = dquad.Template_0001()
    assert template

    assert template.name == "0001"

    assert template.vertices == (
        # (0.0, 0.0),
        # (0.0, 2.0),
        # (0.0, 4.0),
        # (2.0, 0.0),
        # (2.0, 2.0),
        # (2.0, 3.0),
        # (2.0, 4.0),
        # (3.0, 2.0),
        # (3.0, 3.0),
        # (3.0, 4.0),
        # (4.0, 0.0),
        # (4.0, 2.0),
        # (4.0, 3.0),
        # (4.0, 4.0),
        (-1.0, -1.0),
        (-1.0, 0.0),
        (-1.0, 1.0),
        (0.0, -1.0),
        (0.0, 0.0),
        (0.0, 0.5),
        (0.0, 1.0),
        (0.5, 0.0),
        (0.5, 0.5),
        (0.5, 1.0),
        (1.0, -1.0),
        (1.0, 0.0),
        (1.0, 0.5),
        (1.0, 1.0),
    )

    assert template.vertices_revalence == (
        (
            # (2.0, 3.0),
            # (1.0, 2.0),
            # (2.0, 1.0),
            # (3.0, 2.0),
            (0.0, 0.5),
            (-0.5, 0.0),
            (0.0, -0.5),
            (0.5, 0.0),
        ),
    )

    assert template.faces == (
        (0, 3, 4, 1),
        (1, 4, 6, 2),
        (3, 10, 11, 4),
        (4, 7, 8, 5),
        (5, 8, 9, 6),
        (7, 11, 12, 8),
        (8, 12, 13, 9),
    )

    assert template.vertices_dual == (
        # (1.0, 1.0),
        # (1.0, 3.0),
        # (1.667, 1.667),
        # (1.667, 2.333),
        # (2.333, 1.667),
        # (2.5, 2.5),
        # (2.5, 3.5),
        # (3.0, 1.0),
        # (3.5, 2.5),
        # (3.5, 3.5),
        (-0.5, -0.5),
        (-0.5, 0.5),
        (-0.1665, -0.1665),
        (-0.1665, 0.1665),
        (0.1665, -0.1665),
        (0.25, 0.25),
        (0.25, 0.75),
        (0.5, -0.5),
        (0.75, 0.25),
        (0.75, 0.75),
    )

    assert template.faces_dual == (
        (0, 2, 3, 1),
        (0, 7, 4, 2),
        (2, 4, 5, 3),
        (3, 5, 6, 1),
        (4, 7, 8, 5),
        (5, 8, 9, 6),
    )

    assert template.ports == (
        # (1.0, 0.0),
        # (3.0, 0.0),
        # (4.0, 1.0),
        # (4.0, 2.5),
        # (4.0, 3.5),
        # (3.5, 4.0),
        # (2.5, 4.0),
        # (1.0, 4.0),
        # (0.0, 3.0),
        # (0.0, 1.0),
        (-0.5, -1.0),
        (0.5, -1.0),
        (1.0, -0.5),
        (1.0, 0.25),
        (1.0, 0.75),
        (0.75, 1.0),
        (0.25, 1.0),
        (-0.5, 1.0),
        (-1.0, 0.5),
        (-1.0, -0.5),
    )


def test_Flat():
    template = dquad.Template_0011()
    assert template

    assert template.name == "0011"

    assert template.vertices == (
        # (0.0, 0.0),
        # (0.0, 2.0),
        # (0.0, 4.0),
        # (2.0, 0.0),
        # (2.0, 1.0),
        # (2.0, 2.0),
        # (2.0, 3.0),
        # (2.0, 4.0),
        # (3.0, 0.0),
        # (3.0, 1.0),
        # (3.0, 2.0),
        # (3.0, 3.0),
        # (3.0, 4.0),
        # (4.0, 0.0),
        # (4.0, 1.0),
        # (4.0, 2.0),
        # (4.0, 3.0),
        # (4.0, 4.0),
        (-1.0, -1.0),
        (-1.0, 0.0),
        (-1.0, 1.0),
        (0.0, -1.0),
        (0.0, -0.5),
        (0.0, 0.0),
        (0.0, 0.5),
        (0.0, 1.0),
        (0.5, -1.0),
        (0.5, -0.5),
        (0.5, 0.0),
        (0.5, 0.5),
        (0.5, 1.0),
        (1.0, -1.0),
        (1.0, -0.5),
        (1.0, 0.0),
        (1.0, 0.5),
        (1.0, 1.0),
    )

    assert template.vertices_revalence == (
        (
            # (2.0, 3.0),
            # (1.0, 2.0),
            # (2.0, 1.0),
            (0.0, 0.5),
            (-0.5, 0.0),
            (0.0, -0.5),
        ),
    )

    assert template.faces == (
        (0, 3, 5, 1),
        (1, 5, 7, 2),
        (3, 8, 9, 4),
        (4, 9, 10, 5),
        (5, 10, 11, 6),
        (6, 11, 12, 7),
        (8, 13, 14, 9),
        (9, 14, 15, 10),
        (10, 15, 16, 11),
        (11, 16, 17, 12),
    )

    assert template.vertices_dual == (
        # (1.0, 1.0),
        # (1.0, 3.0),
        # (1.667, 1.667),
        # (1.667, 2.333),
        # (2.5, 0.5),
        # (2.5, 1.5),
        # (2.5, 2.5),
        # (2.5, 3.5),
        # (3.5, 0.5),
        # (3.5, 1.5),
        # (3.5, 2.5),
        # (3.5, 3.5),
        (-0.5, -0.5),
        (-0.5, 0.5),
        (-0.1665, -0.1665),
        (-0.1665, 0.1665),
        (0.25, -0.75),
        (0.25, -0.25),
        (0.25, 0.25),
        (0.25, 0.75),
        (0.75, -0.75),
        (0.75, -0.25),
        (0.75, 0.25),
        (0.75, 0.75),
    )

    assert template.faces_dual == (
        (0, 2, 3, 1),
        (0, 4, 5, 2),
        (2, 5, 6, 3),
        (3, 6, 7, 1),
        (4, 8, 9, 5),
        (5, 9, 10, 6),
        (6, 10, 11, 7),
    )

    assert template.ports == (
        # (1.0, 0.0),
        # (2.5, 0.0),
        # (3.5, 0.0),
        # (4.0, 0.5),
        # (4.0, 1.5),
        # (4.0, 2.5),
        # (4.0, 3.5),
        # (3.5, 4.0),
        # (2.5, 4.0),
        # (1.0, 4.0),
        # (0.0, 3.0),
        # (0.0, 1.0),
        (-0.5, -1.0),
        (0.25, -1.0),
        (0.75, -1.0),
        (1.0, -0.75),
        (1.0, -0.25),
        (1.0, 0.25),
        (1.0, 0.75),
        (0.75, 1.0),
        (0.25, 1.0),
        (-0.5, 1.0),
        (-1.0, 0.5),
        (-1.0, -0.5),
    )


def test_Diagonal():
    template = dquad.Template_0110()
    assert template

    assert template.name == "0110"

    assert template.vertices == (
        # (0.0, 0.0),
        # (0.0, 2.0),
        # (0.0, 3.0),
        # (0.0, 4.0),
        # (1.0, 2.0),
        # (1.0, 3.0),
        # (1.0, 4.0),
        # (2.0, 0.0),
        # (2.0, 1.0),
        # (2.0, 2.0),
        # (2.0, 3.0),
        # (2.0, 4.0),
        # (3.0, 0.0),
        # (3.0, 1.0),
        # (3.0, 2.0),
        # (4.0, 0.0),
        # (4.0, 1.0),
        # (4.0, 2.0),
        # (4.0, 4.0),
        (-1.0, -1.0),
        (-1.0, 0.0),
        (-1.0, 0.5),
        (-1.0, 1.0),
        (-0.5, 0.0),
        (-0.5, 0.5),
        (-0.5, 1.0),
        (0.0, -1.0),
        (0.0, -0.5),
        (0.0, 0.0),
        (0.0, 0.5),
        (0.0, 1.0),
        (0.5, -1.0),
        (0.5, -0.5),
        (0.5, 0.0),
        (1.0, -1.0),
        (1.0, -0.5),
        (1.0, 0.0),
        (1.0, 1.0),
    )

    assert template.vertices_revalence == (
        (
            # (1.0, 2.0),
            # (2.0, 1.0),
            (-0.5, 0.0),
            (0.0, -0.5),
        ),
        (
            # (3.0, 2.0),
            # (2.0, 3.0),
            (0.5, 0.0),
            (0.0, 0.5),
        ),
    )

    assert template.faces == (
        (0, 7, 9, 1),
        (1, 4, 5, 2),
        (2, 5, 6, 3),
        (4, 9, 10, 5),
        (5, 10, 11, 6),
        (7, 12, 13, 8),
        (8, 13, 14, 9),
        (12, 15, 16, 13),
        (13, 16, 17, 14),
        (9, 17, 18, 11),
    )

    assert template.vertices_dual == (
        # (1.0, 1.0),
        # (0.5, 2.5),
        # (0.5, 3.5),
        # (1.667, 1.667),
        # (1.5, 2.5),
        # (1.5, 3.5),
        # (2.5, 0.5),
        # (2.5, 1.5),
        # (2.333, 2.333),
        # (3.5, 0.5),
        # (3.5, 1.5),
        # (3.0, 3.0),
        (-0.5, -0.5),
        (-0.75, 0.25),
        (-0.75, 0.75),
        (-0.1665, -0.1665),
        (-0.25, 0.25),
        (-0.25, 0.75),
        (0.25, -0.75),
        (0.25, -0.25),
        (0.1665, 0.1665),
        (0.75, -0.75),
        (0.75, -0.25),
        (0.5, 0.5),
    )

    assert template.faces_dual == (
        (0, 3, 4, 1),
        (1, 4, 5, 2),
        (0, 6, 7, 3),
        (3, 7, 8, 4),
        (4, 8, 11, 5),
        (6, 9, 10, 7),
        (7, 10, 11, 8),
    )

    assert template.ports == (
        # (1.0, 0.0),
        # (2.5, 0.0),
        # (3.5, 0.0),
        # (4.0, 0.5),
        # (4.0, 1.5),
        # (4.0, 3.0),
        # (3.0, 4.0),
        # (1.5, 4.0),
        # (0.5, 4.0),
        # (0.0, 3.5),
        # (0.0, 2.5),
        # (0.0, 1.0),
        (-0.5, -1.0),
        (0.25, -1.0),
        (0.75, -1.0),
        (1.0, -0.75),
        (1.0, -0.25),
        (1.0, 0.5),
        (0.5, 1.0),
        (-0.25, 1.0),
        (-0.75, 1.0),
        (-1.0, 0.75),
        (-1.0, 0.25),
        (-1.0, -0.5),
    )


def test_Concave():
    template = dquad.Template_0111()
    assert template

    assert template.name == "0111"

    assert template.vertices == (
        # (0.0, 0.0),
        # (0.0, 2.0),
        # (0.0, 3.0),
        # (0.0, 4.0),
        # (1.0, 2.0),
        # (1.0, 3.0),
        # (1.0, 4.0),
        # (2.0, 0.0),
        # (2.0, 1.0),
        # (2.0, 2.0),
        # (2.0, 3.0),
        # (2.0, 4.0),
        # (3.0, 0.0),
        # (3.0, 1.0),
        # (3.0, 2.0),
        # (3.0, 3.0),
        # (3.0, 4.0),
        # (4.0, 0.0),
        # (4.0, 1.0),
        # (4.0, 2.0),
        # (4.0, 3.0),
        # (4.0, 4.0),
        (-1.0, -1.0),
        (-1.0, 0.0),
        (-1.0, 0.5),
        (-1.0, 1.0),
        (-0.5, 0.0),
        (-0.5, 0.5),
        (-0.5, 1.0),
        (0.0, -1.0),
        (0.0, -0.5),
        (0.0, 0.0),
        (0.0, 0.5),
        (0.0, 1.0),
        (0.5, -1.0),
        (0.5, -0.5),
        (0.5, 0.0),
        (0.5, 0.5),
        (0.5, 1.0),
        (1.0, -1.0),
        (1.0, -0.5),
        (1.0, 0.0),
        (1.0, 0.5),
        (1.0, 1.0),
    )

    assert template.vertices_revalence == (
        (
            # (1.0, 2.0),
            # (2.0, 1.0),
            (-0.5, 0.0),
            (0.0, -0.5),
        ),
    )

    assert template.faces == (
        (0, 7, 9, 1),
        (1, 4, 5, 2),
        (2, 5, 6, 3),
        (4, 9, 10, 5),
        (5, 10, 11, 6),
        (7, 12, 13, 8),
        (8, 13, 14, 9),
        (9, 14, 15, 10),
        (10, 15, 16, 11),
        (12, 17, 18, 13),
        (13, 18, 19, 14),
        (14, 19, 20, 15),
        (15, 20, 21, 16),
    )

    assert template.vertices_dual == (
        # (1.0, 1.0),
        # (0.5, 2.5),
        # (0.5, 3.5),
        # (1.667, 1.667),
        # (1.5, 2.5),
        # (1.5, 3.5),
        # (2.5, 0.5),
        # (2.5, 1.5),
        # (2.5, 2.5),
        # (2.5, 3.5),
        # (3.5, 0.5),
        # (3.5, 1.5),
        # (3.5, 2.5),
        # (3.5, 3.5),
        (-0.5, -0.5),
        (-0.75, 0.25),
        (-0.75, 0.75),
        (-0.1665, -0.1665),
        (-0.25, 0.25),
        (-0.25, 0.75),
        (0.25, -0.75),
        (0.25, -0.25),
        (0.25, 0.25),
        (0.25, 0.75),
        (0.75, -0.75),
        (0.75, -0.25),
        (0.75, 0.25),
        (0.75, 0.75),
    )

    assert template.faces_dual == (
        (0, 3, 4, 1),
        (1, 4, 5, 2),
        (0, 6, 7, 3),
        (3, 7, 8, 4),
        (4, 8, 9, 5),
        (6, 10, 11, 7),
        (7, 11, 12, 8),
        (8, 12, 13, 9),
    )

    assert template.ports == (
        # (1.0, 0.0),
        # (2.5, 0.0),
        # (3.5, 0.0),
        # (4.0, 0.5),
        # (4.0, 1.5),
        # (4.0, 2.5),
        # (4.0, 3.5),
        # (3.5, 4.0),
        # (2.5, 4.0),
        # (1.5, 4.0),
        # (0.5, 4.0),
        # (0.0, 3.5),
        # (0.0, 2.5),
        # (0.0, 1.0),
        (-0.5, -1.0),
        (0.25, -1.0),
        (0.75, -1.0),
        (1.0, -0.75),
        (1.0, -0.25),
        (1.0, 0.25),
        (1.0, 0.75),
        (0.75, 1.0),
        (0.25, 1.0),
        (-0.25, 1.0),
        (-0.75, 1.0),
        (-1.0, 0.75),
        (-1.0, 0.25),
        (-1.0, -0.5),
    )


def test_L1():
    template = dquad.Template_1111()
    assert template

    assert template.name == "1111"

    assert template.vertices == (
        # (0.0, 0.0),
        # (0.0, 1.0),
        # (0.0, 2.0),
        # (0.0, 3.0),
        # (0.0, 4.0),
        # (1.0, 0.0),
        # (1.0, 1.0),
        # (1.0, 2.0),
        # (1.0, 3.0),
        # (1.0, 4.0),
        # (2.0, 0.0),
        # (2.0, 1.0),
        # (2.0, 2.0),
        # (2.0, 3.0),
        # (2.0, 4.0),
        # (3.0, 0.0),
        # (3.0, 1.0),
        # (3.0, 2.0),
        # (3.0, 3.0),
        # (3.0, 4.0),
        # (4.0, 0.0),
        # (4.0, 1.0),
        # (4.0, 2.0),
        # (4.0, 3.0),
        # (4.0, 4.0),
        (-1.0, -1.0),
        (-1.0, -0.5),
        (-1.0, 0.0),
        (-1.0, 0.5),
        (-1.0, 1.0),
        (-0.5, -1.0),
        (-0.5, -0.5),
        (-0.5, 0.0),
        (-0.5, 0.5),
        (-0.5, 1.0),
        (0.0, -1.0),
        (0.0, -0.5),
        (0.0, 0.0),
        (0.0, 0.5),
        (0.0, 1.0),
        (0.5, -1.0),
        (0.5, -0.5),
        (0.5, 0.0),
        (0.5, 0.5),
        (0.5, 1.0),
        (1.0, -1.0),
        (1.0, -0.5),
        (1.0, 0.0),
        (1.0, 0.5),
        (1.0, 1.0),
    )

    assert template.vertices_revalence is None

    assert template.faces == (
        (0, 5, 6, 1),
        (1, 6, 7, 2),
        (2, 7, 8, 3),
        (3, 8, 9, 4),
        (5, 10, 11, 6),
        (6, 11, 12, 7),
        (7, 12, 13, 8),
        (8, 13, 14, 9),
        (10, 15, 16, 11),
        (11, 16, 17, 12),
        (12, 17, 18, 13),
        (13, 18, 19, 14),
        (15, 20, 21, 16),
        (16, 21, 22, 17),
        (17, 22, 23, 18),
        (18, 23, 24, 19),
    )

    assert template.vertices_dual == (
        # (0.5, 0.5),
        # (0.5, 1.5),
        # (0.5, 2.5),
        # (0.5, 3.5),
        # (1.5, 0.5),
        # (1.5, 1.5),
        # (1.5, 2.5),
        # (1.5, 3.5),
        # (2.5, 0.5),
        # (2.5, 1.5),
        # (2.5, 2.5),
        # (2.5, 3.5),
        # (3.5, 0.5),
        # (3.5, 1.5),
        # (3.5, 2.5),
        # (3.5, 3.5),
        (-0.75, -0.75),
        (-0.75, -0.25),
        (-0.75, 0.25),
        (-0.75, 0.75),
        (-0.25, -0.75),
        (-0.25, -0.25),
        (-0.25, 0.25),
        (-0.25, 0.75),
        (0.25, -0.75),
        (0.25, -0.25),
        (0.25, 0.25),
        (0.25, 0.75),
        (0.75, -0.75),
        (0.75, -0.25),
        (0.75, 0.25),
        (0.75, 0.75),
    )

    assert template.faces_dual == (
        (0, 4, 5, 1),
        (1, 5, 6, 2),
        (2, 6, 7, 3),
        (4, 8, 9, 5),
        (5, 9, 10, 6),
        (6, 10, 11, 7),
        (8, 12, 13, 9),
        (9, 13, 14, 10),
        (10, 14, 15, 11),
    )

    assert template.ports == (
        # (0.5, 0.0),
        # (1.5, 0.0),
        # (2.5, 0.0),
        # (3.5, 0.0),
        # (4.0, 0.5),
        # (4.0, 1.5),
        # (4.0, 2.5),
        # (4.0, 3.5),
        # (3.5, 4.0),
        # (2.5, 4.0),
        # (1.5, 4.0),
        # (0.5, 4.0),
        # (0.0, 3.5),
        # (0.0, 2.5),
        # (0.0, 1.5),
        # (0.0, 0.5),
        (-0.75, -1.0),
        (-0.25, -1.0),
        (0.25, -1.0),
        (0.75, -1.0),
        (1.0, -0.75),
        (1.0, -0.25),
        (1.0, 0.25),
        (1.0, 0.75),
        (0.75, 1.0),
        (0.25, 1.0),
        (-0.25, 1.0),
        (-0.75, 1.0),
        (-1.0, 0.75),
        (-1.0, 0.25),
        (-1.0, -0.25),
        (-1.0, -0.75),
    )
